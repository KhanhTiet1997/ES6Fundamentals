{"version":3,"file":"app/es5/letandconst.js","sources":["app/es5/letandconst.js"],"names":[],"mappings":"AAAA;AAAA,CAAA,OAAQ,CAAC,eAAe,CAAE,UAAS,CAAE;AACnC,CAAA,GAAE,CAAC,0CAA0C,CAAE,UAAS,CAAE;AACpD,CAAJ,MAAI,CAAA,MAAM,EAAG,UAAS,IAAI,CAAE;CAC1B,SAAI,IAAI,CAAE;AACJ,CAAJ,UAAI,CAAA,CAAC,EAAG,EAAC,CAAC;OACX;AACD,CADC,WACM,EAAC,CAAC;KACV,CAAC;AAEE,CAAJ,MAAI,CAAA,MAAM,EAAG,CAAA,MAAM,CAAC,IAAI,CAAC,CAAC;AAC1B,CAAA,SAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;GACxB,CAAC,CAAC;CACJ,CAAC,CAAC;AAEH,CAAA,OAAQ,CAAC,eAAe,CAAE,UAAS,CAAE;AACnC,CAAA,GAAE,CAAC,0CAA0C,CAAE,UAAS,CAAE;AACpD,CAAJ,MAAI,CAAA,MAAM,EAAG,UAAS,IAAI,CAAE;CAC1B,SAAI,IAAI,CAAE;AACJ,CAAJ,UAAI,CAAA,CAAC,EAAG,EAAC,CAAC;OACX;AACD,CADC,WACM,EAAC,CAAC;KACV,CAAC;AAEE,CAAJ,MAAI,CAAA,MAAM,EAAG,CAAA,MAAM,CAAC,KAAK,CAAC,CAAC;AAC3B,CAAA,SAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;GACxB,CAAC,CAAC;CACJ,CAAC,CAAC;AAEH,CAAA,OAAQ,CAAC,eAAe,CAAE,UAAS;AACjC,CAAA,GAAE,CAAC,0CAA0C,CAAE,UAAS;gBACzC,UAAS,IAAI;CACxB,SAAI,IAAI;;;;aACE,EAAC;;OACV;CACD,WAAO,EAAC,CAAC;KACV;AAEG,CAAJ,MAAI,CAAA,MAAM,EAAG,CAAA,MAAM,CAAC,KAAK,CAAC,CAAC;AAC3B,CAAA,SAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;GACxB,CAAC,CAAC;CACJ,CAAC,CAAC;AAEH,CAAA,OAAQ,CAAC,eAAe,CAAE,UAAS;AACjC,CAAA,GAAE,CAAC,0CAA0C,CAAE,UAAS;gBACzC,UAAS,IAAI;CACxB,SAAI,IAAI;;;;aACE,EAAC;CACT,eAAO,EAAC,CAAC;;OACV;KACF;AAEG,CAAJ,MAAI,CAAA,MAAM,EAAG,CAAA,MAAM,CAAC,IAAI,CAAC,CAAC;AAC1B,CAAA,SAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;GACxB,CAAC,CAAC;CACJ,CAAC,CAAC;AAEH,CAAA,OAAQ,CAAC,eAAe,CAAE,UAAS,CAAE;AACnC,CAAA,GAAE,CAAC,qDAAqD,CAAE,UAAS,CAAE;AAC/D,CAAJ,MAAI,CAAA,MAAM,EAAG,UAAS,CAAE;CACtB,UAAS,GAAA,CAAA,CAAC,EAAG,EAAC,CAAE,CAAA,CAAC,EAAG,GAAE,CAAE,CAAA,CAAC,EAAE,CAAE,GAAE;AAC/B,CAD+B,WACxB,EAAC,CAAC;KACV,CAAC;AAEE,CAAJ,MAAI,CAAA,MAAM,EAAG,CAAA,MAAM,EAAE,CAAC;AACtB,CAAA,SAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;GACzB,CAAC,CAAC;CACJ,CAAC,CAAC;AAEH,CAAA,OAAQ,CAAC,eAAe,CAAE,UAAS;AACjC,CAAA,GAAE,CAAC,qDAAqD,CAAE,UAAS;gBACpD,UAAS;;;;;cACP,EAAC;gBAAE,KAAI,GAAE,CAAE,KAAG;;;;;iBAAE,GAAE;;;;;;;CAC/B,WAAO,EAAC,CAAC;KACV;AAEG,CAAJ,MAAI,CAAA,MAAM,EAAG,CAAA,MAAM,EAAE,CAAC;AACtB,CAAA,SAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;GACxB,CAAC,CAAC;CACJ,CAAC,CAAC;AAEH,CAAA,OAAQ,CAAC,aAAa,CAAE,UAAS;AAC/B,CAAA,GAAE,CAAC,+EAA+E,CAAE,UAAS;OACrF,CAAA,QAAQ,EAAG,GAAE;AAGnB,CAAA,SAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;GAC3B,CAAC,CAAC;AAEH,CAAA,GAAE,CAAC,oHAAoH,CAAE,UAAS;OAC1H,CAAA,CAAC,EAAG,GAAE;AACR,CAAJ,MAAI,CAAA,MAAM,EAAG,UAAS,CAAE;AAClB,CAAJ,QAAI,CAAA,CAAC,EAAG,GAAE,CAAC;CACX,WAAO,EAAC,CAAC;KACV,CAAC;AAEE,CAAJ,MAAI,CAAA,MAAM,EAAG,CAAA,MAAM,EAAE,CAAC;AACtB,CAAA,SAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACxB,CAAA,SAAM,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;GACpB,CAAC,CAAC;CACJ,CAAC,CAAC;CACH","sourcesContent":["describe('how let works', function() {\r\n  it('will provide block scoping, unlike var 1', function() {\r\n    var doWork = function(flag) {\r\n      if (flag) {\r\n        var x = 3;\r\n      }\r\n      return x;\r\n    };\r\n\r\n    var result = doWork(true);\r\n    expect(result).toBe(3);\r\n  });\r\n});\r\n\r\ndescribe('how let works', function() {\r\n  it('will provide block scoping, unlike var 2', function() {\r\n    var doWork = function(flag) {\r\n      if (flag) {\r\n        var x = 3;\r\n      }\r\n      return x;\r\n    };\r\n\r\n    var result = doWork(false);\r\n    expect(result).toBe(3);\r\n  });\r\n});\r\n\r\ndescribe('how let works', function() {\r\n  it('will provide block scoping, unlike var 3', function() {\r\n    var doWork = function(flag) {\r\n      if (flag) {\r\n        let x = 3;\r\n      }\r\n      return x;\r\n    };\r\n\r\n    var result = doWork(false);\r\n    expect(result).toBe(3);\r\n  });\r\n});\r\n\r\ndescribe('how let works', function() {\r\n  it('will provide block scoping, unlike var 4', function() {\r\n    var doWork = function(flag) {\r\n      if (flag) {\r\n        let x = 3;\r\n        return x;\r\n      }\r\n    };\r\n\r\n    var result = doWork(true);\r\n    expect(result).toBe(3);\r\n  });\r\n});\r\n\r\ndescribe('how let works', function() {\r\n  it('will provide block scoping, unlike var for loop var', function() {\r\n    var doWork = function() {\r\n      for (var i = 0; i < 10; i++) {}\r\n      return i;\r\n    };\r\n\r\n    var result = doWork();\r\n    expect(result).toBe(10);\r\n  });\r\n});\r\n\r\ndescribe('how let works', function() {\r\n  it('will provide block scoping, unlike var for loop let', function() {\r\n    var doWork = function() {\r\n      for (let i = 0; i < 10; i++) {}\r\n      return i;\r\n    };\r\n\r\n    var result = doWork();\r\n    expect(result).toBe(3);\r\n  });\r\n});\r\n\r\ndescribe('using const', function() {\r\n  it('will make a variable read-only, if we try to assign, we will get syntax error', function() {\r\n    const MAX_SIZE = 10;\r\n\r\n    //MAX_SIZE = 12; //Syntax Error\r\n    expect(MAX_SIZE).toBe(10);\r\n  });\r\n\r\n  it('an shadow outer declaration. Const have block scoping. Therefore, we cannot redeclare let or const in a same scope', function() {\r\n    const x = 12;\r\n    var doWork = function() {\r\n      var x = 10;\r\n      return x;\r\n    };\r\n\r\n    var result = doWork();\r\n    expect(result).toBe(10);\r\n    expect(x).toBe(12);\r\n  });\r\n});\r\n"]}