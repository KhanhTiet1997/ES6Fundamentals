{"version":3,"file":"app/es5/letandconst.js","sources":["app/es5/letandconst.js"],"names":[],"mappings":"AAoGA;CAAA","sourcesContent":["// describe('how let works', function() {\r\n//   it('will provide block scoping, unlike var 1', function() {\r\n//     var doWork = function(flag) {\r\n//       if (flag) {\r\n//         var x = 3;\r\n//       }\r\n//       return x;\r\n//     };\r\n\r\n//     var result = doWork(true);\r\n//     expect(result).toBe(3);\r\n//   });\r\n// });\r\n\r\n// describe('how let works', function() {\r\n//   it('will provide block scoping, unlike var 2', function() {\r\n//     var doWork = function(flag) {\r\n//       if (flag) {\r\n//         var x = 3;\r\n//       }\r\n//       return x;\r\n//     };\r\n\r\n//     var result = doWork(false);\r\n//     expect(result).toBe(3);\r\n//   });\r\n// });\r\n\r\n// describe('how let works', function() {\r\n//   it('will provide block scoping, unlike var 3', function() {\r\n//     var doWork = function(flag) {\r\n//       if (flag) {\r\n//         let x = 3;\r\n//       }\r\n//       return x;\r\n//     };\r\n\r\n//     var result = doWork(false);\r\n//     expect(result).toBe(3);\r\n//   });\r\n// });\r\n\r\n// describe('how let works', function() {\r\n//   it('will provide block scoping, unlike var 4', function() {\r\n//     var doWork = function(flag) {\r\n//       if (flag) {\r\n//         let x = 3;\r\n//         return x;\r\n//       }\r\n//     };\r\n\r\n//     var result = doWork(true);\r\n//     expect(result).toBe(3);\r\n//   });\r\n// });\r\n\r\n// describe('how let works', function() {\r\n//   it('will provide block scoping, unlike var for loop var', function() {\r\n//     var doWork = function() {\r\n//       for (var i = 0; i < 10; i++) {}\r\n//       return i;\r\n//     };\r\n\r\n//     var result = doWork();\r\n//     expect(result).toBe(10);\r\n//   });\r\n// });\r\n\r\n// describe('how let works', function() {\r\n//   it('will provide block scoping, unlike var for loop let', function() {\r\n//     var doWork = function() {\r\n//       for (let i = 0; i < 10; i++) {}\r\n//       return i;\r\n//     };\r\n\r\n//     var result = doWork();\r\n//     expect(result).toBe(3);\r\n//   });\r\n// });\r\n\r\n// describe('using const', function() {\r\n//   it('will make a variable read-only, if we try to assign, we will get syntax error', function() {\r\n//     const MAX_SIZE = 10;\r\n\r\n//     //MAX_SIZE = 12; //Syntax Error\r\n//     expect(MAX_SIZE).toBe(10);\r\n//   });\r\n\r\n//   it('an shadow outer declaration. Const have block scoping. Therefore, we cannot redeclare let or const in a same scope', function() {\r\n//     const x = 12;\r\n//     var doWork = function() {\r\n//       var x = 10;\r\n//       return x;\r\n//     };\r\n\r\n//     var result = doWork();\r\n//     expect(result).toBe(10);\r\n//     expect(x).toBe(12);\r\n//   });\r\n// });\r\n"]}